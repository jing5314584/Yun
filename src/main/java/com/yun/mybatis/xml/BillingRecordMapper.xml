<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yun.mybatis.mapper.BillingRecordMapper">
  <resultMap id="BaseResultMap" type="com.yun.mybatis.model.BillingRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="order_par" jdbcType="VARCHAR" property="orderPar" />
    <result column="transaction_no" jdbcType="VARCHAR" property="transactionNo" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="error_code" jdbcType="INTEGER" property="errorCode" />
    <result column="total_price" jdbcType="INTEGER" property="totalPrice" />
    <result column="product_idx" jdbcType="INTEGER" property="productIdx" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_no, order_par, transaction_no, time, state, error_code, total_price, product_idx, 
    pay_type
  </sql>
  <select id="selectByExample" parameterType="com.yun.mybatis.model.BillingRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from y_billing_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from y_billing_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from y_billing_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yun.mybatis.model.BillingRecordExample">
    delete from y_billing_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yun.mybatis.model.BillingRecord">
    insert into y_billing_record (id, order_no, order_par, 
      transaction_no, time, state, 
      error_code, total_price, product_idx, 
      pay_type)
    values (#{id,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{orderPar,jdbcType=VARCHAR}, 
      #{transactionNo,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, 
      #{errorCode,jdbcType=INTEGER}, #{totalPrice,jdbcType=INTEGER}, #{productIdx,jdbcType=INTEGER}, 
      #{payType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yun.mybatis.model.BillingRecord">
    insert into y_billing_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="orderPar != null">
        order_par,
      </if>
      <if test="transactionNo != null">
        transaction_no,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="errorCode != null">
        error_code,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="productIdx != null">
        product_idx,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderPar != null">
        #{orderPar,jdbcType=VARCHAR},
      </if>
      <if test="transactionNo != null">
        #{transactionNo,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="errorCode != null">
        #{errorCode,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=INTEGER},
      </if>
      <if test="productIdx != null">
        #{productIdx,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yun.mybatis.model.BillingRecordExample" resultType="java.lang.Integer">
    select count(*) from y_billing_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update y_billing_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderPar != null">
        order_par = #{record.orderPar,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionNo != null">
        transaction_no = #{record.transactionNo,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.errorCode != null">
        error_code = #{record.errorCode,jdbcType=INTEGER},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=INTEGER},
      </if>
      <if test="record.productIdx != null">
        product_idx = #{record.productIdx,jdbcType=INTEGER},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update y_billing_record
    set id = #{record.id,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      order_par = #{record.orderPar,jdbcType=VARCHAR},
      transaction_no = #{record.transactionNo,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      error_code = #{record.errorCode,jdbcType=INTEGER},
      total_price = #{record.totalPrice,jdbcType=INTEGER},
      product_idx = #{record.productIdx,jdbcType=INTEGER},
      pay_type = #{record.payType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yun.mybatis.model.BillingRecord">
    update y_billing_record
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderPar != null">
        order_par = #{orderPar,jdbcType=VARCHAR},
      </if>
      <if test="transactionNo != null">
        transaction_no = #{transactionNo,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="errorCode != null">
        error_code = #{errorCode,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=INTEGER},
      </if>
      <if test="productIdx != null">
        product_idx = #{productIdx,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yun.mybatis.model.BillingRecord">
    update y_billing_record
    set order_no = #{orderNo,jdbcType=VARCHAR},
      order_par = #{orderPar,jdbcType=VARCHAR},
      transaction_no = #{transactionNo,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      error_code = #{errorCode,jdbcType=INTEGER},
      total_price = #{totalPrice,jdbcType=INTEGER},
      product_idx = #{productIdx,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.yun.mybatis.model.BillingRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from y_billing_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>