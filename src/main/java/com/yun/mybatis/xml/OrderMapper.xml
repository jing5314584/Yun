<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yun.mybatis.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.yun.mybatis.model.Order" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="goods_img" property="goodsImg" jdbcType="VARCHAR" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="parent" property="parent" jdbcType="VARCHAR" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="is_comment" property="isComment" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, goods_id, user_id, price, create_time, goods_name, goods_img, pay_type, parent, 
    pay_time, type, is_comment
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yun.mybatis.model.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from y_group_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from y_group_order
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from y_group_order
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yun.mybatis.model.OrderExample" >
    delete from y_group_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yun.mybatis.model.Order" >
    insert into y_group_order (id, goods_id, user_id, 
      price, create_time, goods_name, 
      goods_img, pay_type, parent, 
      pay_time, type, is_comment
      )
    values (#{id,jdbcType=VARCHAR}, #{goodsId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, 
      #{price,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{goodsName,jdbcType=VARCHAR}, 
      #{goodsImg,jdbcType=VARCHAR}, #{payType,jdbcType=INTEGER}, #{parent,jdbcType=VARCHAR}, 
      #{payTime,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, #{isComment,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yun.mybatis.model.Order" >
    insert into y_group_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="goodsImg != null" >
        goods_img,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="parent != null" >
        parent,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="isComment != null" >
        is_comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsImg != null" >
        #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="parent != null" >
        #{parent,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="isComment != null" >
        #{isComment,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yun.mybatis.model.OrderExample" resultType="java.lang.Integer" >
    select count(*) from y_group_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update y_group_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsImg != null" >
        goods_img = #{record.goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.parent != null" >
        parent = #{record.parent,jdbcType=VARCHAR},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.isComment != null" >
        is_comment = #{record.isComment,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update y_group_order
    set id = #{record.id,jdbcType=VARCHAR},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_img = #{record.goodsImg,jdbcType=VARCHAR},
      pay_type = #{record.payType,jdbcType=INTEGER},
      parent = #{record.parent,jdbcType=VARCHAR},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=INTEGER},
      is_comment = #{record.isComment,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yun.mybatis.model.Order" >
    update y_group_order
    <set >
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsImg != null" >
        goods_img = #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="parent != null" >
        parent = #{parent,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="isComment != null" >
        is_comment = #{isComment,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yun.mybatis.model.Order" >
    update y_group_order
    set goods_id = #{goodsId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_img = #{goodsImg,jdbcType=VARCHAR},
      pay_type = #{payType,jdbcType=INTEGER},
      parent = #{parent,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      is_comment = #{isComment,jdbcType=BIT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.yun.mybatis.model.OrderExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from y_group_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>