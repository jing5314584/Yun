<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yun.mybatis.mapper.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.yun.mybatis.model.Goods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="cat_id" jdbcType="INTEGER" property="catId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_number" jdbcType="INTEGER" property="goodsNumber" />
    <result column="group__num" jdbcType="INTEGER" property="groupNum" />
    <result column="market_price" jdbcType="INTEGER" property="marketPrice" />
    <result column="single_price" jdbcType="INTEGER" property="singlePrice" />
    <result column="group_price" jdbcType="INTEGER" property="groupPrice" />
    <result column="group_start_date" jdbcType="TIMESTAMP" property="groupStartDate" />
    <result column="group_end_date" jdbcType="TIMESTAMP" property="groupEndDate" />
    <result column="keywords" jdbcType="VARCHAR" property="keywords" />
    <result column="goods_brief" jdbcType="VARCHAR" property="goodsBrief" />
    <result column="goods_thumb" jdbcType="VARCHAR" property="goodsThumb" />
    <result column="goods_img" jdbcType="VARCHAR" property="goodsImg" />
    <result column="is_real" jdbcType="BIT" property="isReal" />
    <result column="is_on_sale" jdbcType="BIT" property="isOnSale" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="goods_type" jdbcType="INTEGER" property="goodsType" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, url, cat_id, goods_name, goods_number, group__num, market_price, single_price, 
    group_price, group_start_date, group_end_date, keywords, goods_brief, goods_thumb, 
    goods_img, is_real, is_on_sale, create_time, sort_order, is_delete, goods_type, last_update_time
  </sql>
  <select id="selectByExample" parameterType="com.yun.mybatis.model.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from y_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from y_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from y_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yun.mybatis.model.GoodsExample">
    delete from y_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yun.mybatis.model.Goods">
    insert into y_goods (id, url, cat_id, 
      goods_name, goods_number, group__num, 
      market_price, single_price, group_price, 
      group_start_date, group_end_date, keywords, 
      goods_brief, goods_thumb, goods_img, 
      is_real, is_on_sale, create_time, 
      sort_order, is_delete, goods_type, 
      last_update_time)
    values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{catId,jdbcType=INTEGER}, 
      #{goodsName,jdbcType=VARCHAR}, #{goodsNumber,jdbcType=INTEGER}, #{groupNum,jdbcType=INTEGER}, 
      #{marketPrice,jdbcType=INTEGER}, #{singlePrice,jdbcType=INTEGER}, #{groupPrice,jdbcType=INTEGER}, 
      #{groupStartDate,jdbcType=TIMESTAMP}, #{groupEndDate,jdbcType=TIMESTAMP}, #{keywords,jdbcType=VARCHAR}, 
      #{goodsBrief,jdbcType=VARCHAR}, #{goodsThumb,jdbcType=VARCHAR}, #{goodsImg,jdbcType=VARCHAR}, 
      #{isReal,jdbcType=BIT}, #{isOnSale,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{sortOrder,jdbcType=INTEGER}, #{isDelete,jdbcType=BIT}, #{goodsType,jdbcType=INTEGER}, 
      #{lastUpdateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yun.mybatis.model.Goods">
    insert into y_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="catId != null">
        cat_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsNumber != null">
        goods_number,
      </if>
      <if test="groupNum != null">
        group__num,
      </if>
      <if test="marketPrice != null">
        market_price,
      </if>
      <if test="singlePrice != null">
        single_price,
      </if>
      <if test="groupPrice != null">
        group_price,
      </if>
      <if test="groupStartDate != null">
        group_start_date,
      </if>
      <if test="groupEndDate != null">
        group_end_date,
      </if>
      <if test="keywords != null">
        keywords,
      </if>
      <if test="goodsBrief != null">
        goods_brief,
      </if>
      <if test="goodsThumb != null">
        goods_thumb,
      </if>
      <if test="goodsImg != null">
        goods_img,
      </if>
      <if test="isReal != null">
        is_real,
      </if>
      <if test="isOnSale != null">
        is_on_sale,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="goodsType != null">
        goods_type,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="catId != null">
        #{catId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsNumber != null">
        #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="groupNum != null">
        #{groupNum,jdbcType=INTEGER},
      </if>
      <if test="marketPrice != null">
        #{marketPrice,jdbcType=INTEGER},
      </if>
      <if test="singlePrice != null">
        #{singlePrice,jdbcType=INTEGER},
      </if>
      <if test="groupPrice != null">
        #{groupPrice,jdbcType=INTEGER},
      </if>
      <if test="groupStartDate != null">
        #{groupStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="groupEndDate != null">
        #{groupEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="keywords != null">
        #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="goodsBrief != null">
        #{goodsBrief,jdbcType=VARCHAR},
      </if>
      <if test="goodsThumb != null">
        #{goodsThumb,jdbcType=VARCHAR},
      </if>
      <if test="goodsImg != null">
        #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="isReal != null">
        #{isReal,jdbcType=BIT},
      </if>
      <if test="isOnSale != null">
        #{isOnSale,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="goodsType != null">
        #{goodsType,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yun.mybatis.model.GoodsExample" resultType="java.lang.Integer">
    select count(*) from y_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update y_goods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.catId != null">
        cat_id = #{record.catId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsNumber != null">
        goods_number = #{record.goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="record.groupNum != null">
        group__num = #{record.groupNum,jdbcType=INTEGER},
      </if>
      <if test="record.marketPrice != null">
        market_price = #{record.marketPrice,jdbcType=INTEGER},
      </if>
      <if test="record.singlePrice != null">
        single_price = #{record.singlePrice,jdbcType=INTEGER},
      </if>
      <if test="record.groupPrice != null">
        group_price = #{record.groupPrice,jdbcType=INTEGER},
      </if>
      <if test="record.groupStartDate != null">
        group_start_date = #{record.groupStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.groupEndDate != null">
        group_end_date = #{record.groupEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.keywords != null">
        keywords = #{record.keywords,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsBrief != null">
        goods_brief = #{record.goodsBrief,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsThumb != null">
        goods_thumb = #{record.goodsThumb,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsImg != null">
        goods_img = #{record.goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="record.isReal != null">
        is_real = #{record.isReal,jdbcType=BIT},
      </if>
      <if test="record.isOnSale != null">
        is_on_sale = #{record.isOnSale,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
      <if test="record.goodsType != null">
        goods_type = #{record.goodsType,jdbcType=INTEGER},
      </if>
      <if test="record.lastUpdateTime != null">
        last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update y_goods
    set id = #{record.id,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      cat_id = #{record.catId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_number = #{record.goodsNumber,jdbcType=INTEGER},
      group__num = #{record.groupNum,jdbcType=INTEGER},
      market_price = #{record.marketPrice,jdbcType=INTEGER},
      single_price = #{record.singlePrice,jdbcType=INTEGER},
      group_price = #{record.groupPrice,jdbcType=INTEGER},
      group_start_date = #{record.groupStartDate,jdbcType=TIMESTAMP},
      group_end_date = #{record.groupEndDate,jdbcType=TIMESTAMP},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      goods_brief = #{record.goodsBrief,jdbcType=VARCHAR},
      goods_thumb = #{record.goodsThumb,jdbcType=VARCHAR},
      goods_img = #{record.goodsImg,jdbcType=VARCHAR},
      is_real = #{record.isReal,jdbcType=BIT},
      is_on_sale = #{record.isOnSale,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=BIT},
      goods_type = #{record.goodsType,jdbcType=INTEGER},
      last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yun.mybatis.model.Goods">
    update y_goods
    <set>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="catId != null">
        cat_id = #{catId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsNumber != null">
        goods_number = #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="groupNum != null">
        group__num = #{groupNum,jdbcType=INTEGER},
      </if>
      <if test="marketPrice != null">
        market_price = #{marketPrice,jdbcType=INTEGER},
      </if>
      <if test="singlePrice != null">
        single_price = #{singlePrice,jdbcType=INTEGER},
      </if>
      <if test="groupPrice != null">
        group_price = #{groupPrice,jdbcType=INTEGER},
      </if>
      <if test="groupStartDate != null">
        group_start_date = #{groupStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="groupEndDate != null">
        group_end_date = #{groupEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="keywords != null">
        keywords = #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="goodsBrief != null">
        goods_brief = #{goodsBrief,jdbcType=VARCHAR},
      </if>
      <if test="goodsThumb != null">
        goods_thumb = #{goodsThumb,jdbcType=VARCHAR},
      </if>
      <if test="goodsImg != null">
        goods_img = #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="isReal != null">
        is_real = #{isReal,jdbcType=BIT},
      </if>
      <if test="isOnSale != null">
        is_on_sale = #{isOnSale,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="goodsType != null">
        goods_type = #{goodsType,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yun.mybatis.model.Goods">
    update y_goods
    set url = #{url,jdbcType=VARCHAR},
      cat_id = #{catId,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_number = #{goodsNumber,jdbcType=INTEGER},
      group__num = #{groupNum,jdbcType=INTEGER},
      market_price = #{marketPrice,jdbcType=INTEGER},
      single_price = #{singlePrice,jdbcType=INTEGER},
      group_price = #{groupPrice,jdbcType=INTEGER},
      group_start_date = #{groupStartDate,jdbcType=TIMESTAMP},
      group_end_date = #{groupEndDate,jdbcType=TIMESTAMP},
      keywords = #{keywords,jdbcType=VARCHAR},
      goods_brief = #{goodsBrief,jdbcType=VARCHAR},
      goods_thumb = #{goodsThumb,jdbcType=VARCHAR},
      goods_img = #{goodsImg,jdbcType=VARCHAR},
      is_real = #{isReal,jdbcType=BIT},
      is_on_sale = #{isOnSale,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=BIT},
      goods_type = #{goodsType,jdbcType=INTEGER},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.yun.mybatis.model.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from y_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>